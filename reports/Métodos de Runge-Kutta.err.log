Traceback (most recent call last):
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\client.py", line 1263, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\util.py", line 85, in wrapped
    return just_run(coro(*args, **kwargs))
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\util.py", line 60, in just_run
    return loop.run_until_complete(coro)
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\asyncio\base_events.py", line 616, in run_until_complete
    return future.result()
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\client.py", line 701, in async_execute
    await self.async_execute_cell(
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\client.py", line 1019, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\lcisn\AppData\Local\Programs\Python\Python38\lib\site-packages\nbclient\client.py", line 913, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
%matplotlib inline
from ipywidgets import interact
import ipywidgets as widgets
try:
    
  Resistencia = input("Ingrese el valor de la resistencia R en Ohms")
  R=float(Resistencia)

  Inductancia = input("Ingrese el valor de la inductancia L en Henry")
  L=float(Inductancia)

  Capacitancia = input("Ingrese el valor de la capacitancia C en microfaradios")
  C=float(Capacitancia)
except:
    
  R = 1570; 
  L =15.02;
  C =10.0**(-6);  
  
  
   
Frecuencia = input("Ingrese el valor de la frecuencia de muestreo fs en Hz")
fs=float(Frecuencia)

i0=0;            #
v0=0;            # Condiciones iniciales
A=0;             # 
U0=A;            # 

C=C*(10.0**(-6));  

h=1/fs;         # Ancho del paso 
N=int(0.4/h);    # NÃºmero total de pasos

i2=np.empty([N+1],dtype=float);
v2=np.empty([N+1],dtype=float);

i3=np.empty([N+1],dtype=float);
v3=np.empty([N+1],dtype=float);

i4=np.empty([N+1],dtype=float);
v4=np.empty([N+1],dtype=float);

tr=np.empty([N+1],dtype=float);
U=np.empty([N+1],dtype=float);

tr[0]=0;         # 
i2[0]=i0;
i3[0]=i0;
i4[0]=i0;
# Condiciones iniciales
v2[0]=v0;
v3[0]=v0;
v4[0]=v0;
# 
U[0]=U0;


n=0
for n in range(N):
        tr[n+1]=n*h;
        U[n]=1.638;
        U[n+1]=1.638;
        #U[n]=1.598;
        #U[n+1]=1.598
        # mÃ©todo RK2 
        k11=-R/L*i2[n]-1/L*v2[n]+1/L*U[n];
        k12=1/C*i2[n];
    
        k21=-R/L*(i2[n]+h*k11)-1/L*(v2[n]+h*k12)+1/L*U[n];
        k22=1/C*(i2[n]+h*k11);
    
        i2[n+1]=i2[n]+h*(0.5*k11+0.5*k21);
        v2[n+1]=v2[n]+h*(0.5*k12+0.5*k22);
        #i2[n+1]=i2[n]+h*((1/3)*k11+(2/3)*k21);
        #v2[n+1]=v2[n]+h*((1/3)*k12+(2/3)*k22);

        # mÃ©todo RK3 
        k11=-R/L*i3[n]-1/L*v3[n]+1/L*U[n];
        k12=1/C*i3[n];

        k21=-R/L*(i3[n]+0.5*h)-1/L*(v3[n]+0.5*h*k11)+1/L*U[n];
        k22=1/C*(i3[n]+0.5*h);

        k31=-R/L*(i3[n]+h)-1/L*(v3[n]-h*k11+2*k21*h)+1/L*U[n];
        k32=1/C*(i3[n]+h);
    
        i3[n+1]=i3[n]+(1/6)*h*(k11+4*k21+k31);
        v3[n+1]=v3[n]+(1/6)*h*(k12+4*k22+k32);

        # mÃ©todo RK4 
        k11=-R/L*i4[n]-1/L*v4[n]+1/L*U[n];
        k12=1/C*i4[n];

        k21=-R/L*(i4[n]+0.5*h)-1/L*(v4[n]+0.5*h*k12)+1/L*U[n];
        k22=1/C*(i4[n]+0.5*h);

        k31=-R/L*(i4[n]+0.5*h)-1/L*(v4[n]+0.5*h*k22)+1/L*U[n];
        k32=1/C*(i4[n]+h*0.5);
    
        k41=-R/L*(i4[n]+h)-1/L*(v4[n]+h*k32)+1/L*U[n];
        k42=1/C*(i4[n]+h);


        i4[n+1]=i4[n]+(1/6)*h*(k11+2*k21+2*k31+k41);
        v4[n+1]=v4[n]+(1/6)*h*(k12+2*k22+2*k32+k42);

        n=n+1;
  
plt.plot(tr,v2)
plt.plot(tr,v3)
plt.plot(tr,v4)

plt.title('V(t)')
plt.xlabel('t [s]')
plt.ylabel('Voltaje (V)')
plt.legend(["Runge-Kutta 2","Runge-Kutta 3","Runge-Kutta 4"], numpoints=1,loc=0);


------------------

[1;31m---------------------------------------------------------------------------[0m
[1;31mStdinNotImplementedError[0m                  Traceback (most recent call last)
Cell [1;32mIn[6], line 22[0m
[0;32m     17[0m   L [38;5;241m=[39m[38;5;241m15.02[39m;
[0;32m     18[0m   C [38;5;241m=[39m[38;5;241m10.0[39m[38;5;241m*[39m[38;5;241m*[39m([38;5;241m-[39m[38;5;241m6[39m);  
[1;32m---> 22[0m Frecuencia [38;5;241m=[39m [38;5;28minput[39m([38;5;124m"[39m[38;5;124mIngrese el valor de la frecuencia de muestreo fs en Hz[39m[38;5;124m"[39m)
[0;32m     23[0m fs[38;5;241m=[39m[38;5;28mfloat[39m(Frecuencia)
[0;32m     25[0m i0[38;5;241m=[39m[38;5;241m0[39m;            [38;5;66;03m#[39;00m

File [1;32m~\AppData\Local\Programs\Python\Python38\lib\site-packages\ipykernel\kernelbase.py:1174[0m, in [0;36mKernel.raw_input[1;34m(self, prompt)[0m
[0;32m   1167[0m [38;5;124;03m"""Forward raw_input to frontends[39;00m
[0;32m   1168[0m 
[0;32m   1169[0m [38;5;124;03mRaises[39;00m
[0;32m   1170[0m [38;5;124;03m------[39;00m
[0;32m   1171[0m [38;5;124;03mStdinNotImplementedError if active frontend doesn't support stdin.[39;00m
[0;32m   1172[0m [38;5;124;03m"""[39;00m
[0;32m   1173[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_allow_stdin:
[1;32m-> 1174[0m     [38;5;28;01mraise[39;00m StdinNotImplementedError(
[0;32m   1175[0m         [38;5;124m"[39m[38;5;124mraw_input was called, but this frontend does not support input requests.[39m[38;5;124m"[39m
[0;32m   1176[0m     )
[0;32m   1177[0m [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39m_input_request(
[0;32m   1178[0m     [38;5;28mstr[39m(prompt),
[0;32m   1179[0m     [38;5;28mself[39m[38;5;241m.[39m_parent_ident[[38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m],
[0;32m   1180[0m     [38;5;28mself[39m[38;5;241m.[39mget_parent([38;5;124m"[39m[38;5;124mshell[39m[38;5;124m"[39m),
[0;32m   1181[0m     password[38;5;241m=[39m[38;5;28;01mFalse[39;00m,
[0;32m   1182[0m )

[1;31mStdinNotImplementedError[0m: raw_input was called, but this frontend does not support input requests.
StdinNotImplementedError: raw_input was called, but this frontend does not support input requests.

